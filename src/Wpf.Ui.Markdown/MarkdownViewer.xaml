<ResourceDictionary
    xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:control="clr-namespace:Wpf.Ui.Markdown.Controls"
    xmlns:converters="clr-namespace:Wpf.Ui.Converters;assembly=Wpf.Ui"
    xmlns:md="clr-namespace:Wpf.Ui.Markdown"
    xmlns:system="clr-namespace:System;assembly=mscorlib"
    xmlns:ui="http://schemas.lepo.co/wpfui/2022/xaml">

    <Thickness x:Key="MarkdownCheckBoxPadding">11,5,11,6</Thickness>
    <Thickness x:Key="MarkdownCheckBoxBorderThemeThickness">1</Thickness>
    <Thickness x:Key="MarkdownCheckBoxContentMargin">8,0,0,0</Thickness>
    <system:Double x:Key="MarkdownCheckBoxIconSize">15</system:Double>
    <system:Double x:Key="MarkdownCheckBoxHeight">20</system:Double>
    <system:Double x:Key="MarkdownCheckBoxWidth">20</system:Double>

    <Style x:Key="DefaultMarkdownCheckBoxStyle" TargetType="{x:Type CheckBox}">
        <!--  Universal WPF UI focus  -->
        <Setter Property="FocusVisualStyle" Value="{DynamicResource DefaultControlFocusVisualStyle}" />
        <!--  Universal WPF UI focus  -->
        <Setter Property="Background" Value="{DynamicResource CheckBoxBackground}" />
        <Setter Property="Foreground" Value="{DynamicResource CheckBoxForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CheckBoxBorderBrush}" />
        <Setter Property="BorderThickness" Value="{StaticResource MarkdownCheckBoxBorderThemeThickness}" />
        <Setter Property="Padding" Value="{StaticResource MarkdownCheckBoxPadding}" />
        <Setter Property="Border.CornerRadius" Value="{DynamicResource ControlCornerRadius}" />
        <Setter Property="HorizontalAlignment" Value="Left" />
        <Setter Property="VerticalAlignment" Value="Center" />
        <Setter Property="HorizontalContentAlignment" Value="Left" />
        <Setter Property="VerticalContentAlignment" Value="Center" />
        <Setter Property="Cursor" Value="Hand" />
        <Setter Property="FontSize" Value="{DynamicResource ControlContentThemeFontSize}" />
        <Setter Property="FontWeight" Value="Normal" />
        <Setter Property="KeyboardNavigation.IsTabStop" Value="True" />
        <Setter Property="Focusable" Value="True" />
        <Setter Property="MinWidth" Value="120" />
        <Setter Property="MinHeight" Value="24" />
        <Setter Property="SnapsToDevicePixels" Value="True" />
        <Setter Property="OverridesDefaultStyle" Value="True" />
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type CheckBox}">
                    <BulletDecorator
                        HorizontalAlignment="{TemplateBinding HorizontalAlignment}"
                        VerticalAlignment="{TemplateBinding VerticalAlignment}"
                        Background="Transparent">
                        <BulletDecorator.Bullet>
                            <Border
                                x:Name="ControlBorderIconPresenter"
                                Width="{StaticResource MarkdownCheckBoxHeight}"
                                Height="{StaticResource MarkdownCheckBoxWidth}"
                                HorizontalAlignment="Left"
                                VerticalAlignment="Center"
                                Background="{TemplateBinding Background}"
                                CornerRadius="{TemplateBinding Border.CornerRadius}">
                                <Border
                                    x:Name="StrokeBorder"
                                    BorderBrush="{TemplateBinding BorderBrush}"
                                    BorderThickness="{TemplateBinding BorderThickness}"
                                    CornerRadius="{TemplateBinding Border.CornerRadius}">
                                    <Grid>
                                        <ui:SymbolIcon
                                            x:Name="ControlIcon"
                                            Margin="1,6,0,0"
                                            HorizontalAlignment="Center"
                                            VerticalAlignment="Center"
                                            FontSize="{StaticResource MarkdownCheckBoxIconSize}"
                                            FontWeight="Bold"
                                            Foreground="{DynamicResource CheckBoxCheckGlyphForeground}"
                                            Symbol="Checkmark48"
                                            Visibility="Collapsed" />
                                    </Grid>
                                </Border>
                            </Border>
                        </BulletDecorator.Bullet>
                        <ContentPresenter
                            x:Name="ContentPresenter"
                            Margin="{StaticResource MarkdownCheckBoxContentMargin}"
                            HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}"
                            VerticalAlignment="{TemplateBinding VerticalContentAlignment}"
                            RecognizesAccessKey="True" />
                    </BulletDecorator>
                    <ControlTemplate.Triggers>
                        <Trigger Property="Content" Value="{x:Null}">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                            <Setter Property="MinWidth" Value="30" />
                        </Trigger>
                        <Trigger Property="Content" Value="">
                            <Setter TargetName="ContentPresenter" Property="Margin" Value="0" />
                            <Setter Property="MinWidth" Value="30" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="{x:Null}">
                            <Setter TargetName="ControlIcon" Property="Symbol" Value="Subtract16" />
                            <Setter TargetName="ControlIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillChecked}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckBorderBrush}" />
                        </Trigger>
                        <Trigger Property="IsChecked" Value="True">
                            <Setter TargetName="ControlIcon" Property="Visibility" Value="Visible" />
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillChecked}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckBorderBrush}" />
                        </Trigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="False" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="StrokeBorder" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillUncheckedPointerOver}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="{x:Null}" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillCheckedPointerOver}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckBorderBrush}" />
                        </MultiTrigger>
                        <MultiTrigger>
                            <MultiTrigger.Conditions>
                                <Condition Property="IsMouseOver" Value="True" />
                                <Condition Property="IsChecked" Value="True" />
                            </MultiTrigger.Conditions>
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillCheckedPointerOver}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckBorderBrush}" />
                        </MultiTrigger>
                        <Trigger Property="IsEnabled" Value="False">
                            <Setter TargetName="ControlBorderIconPresenter" Property="Background" Value="{DynamicResource CheckBoxCheckBackgroundFillUncheckedDisabled}" />
                            <Setter TargetName="StrokeBorder" Property="BorderBrush" Value="{DynamicResource CheckBoxCheckBackgroundStrokeUncheckedDisabled}" />
                            <Setter TargetName="ControlIcon" Property="Foreground" Value="{DynamicResource CheckBoxForegroundUncheckedDisabled}" />
                            <Setter Property="Foreground" Value="{DynamicResource TextFillColorDisabledBrush}" />
                        </Trigger>
                    </ControlTemplate.Triggers>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style x:Key="DefaultMarkdownViewerStyle" TargetType="{x:Type control:MarkdownViewer}">
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type control:MarkdownViewer}">
                    <FlowDocumentScrollViewer Document="{TemplateBinding Document}" ScrollViewer.VerticalScrollBarVisibility="Auto" />
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>

    <Style BasedOn="{StaticResource DefaultMarkdownViewerStyle}" TargetType="{x:Type control:MarkdownViewer}" />

    <Style x:Key="{x:Static md:Styles.DocumentStyleKey}" TargetType="{x:Type FlowDocument}">
        <Setter Property="Foreground" Value="{DynamicResource CardForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style TargetType="{x:Type List}">
        <Setter Property="Margin" Value="40,0,0,0" />
        <Setter Property="Padding" Value="0,0,0,0" />
        <Setter Property="LineHeight" Value="24" />
    </Style>

    <Style x:Key="{x:Static md:Styles.CodeBlockStyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="Foreground" Value="{DynamicResource MarkdownParagraphBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.CodeStyleKey}" TargetType="{x:Type Run}">
        <Setter Property="Foreground" Value="{DynamicResource MarkdownRunBrush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading1StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading1FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading1Brush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading2StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading2FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading2Brush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading3StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading3FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading3Brush}" />
        <Setter Property="FontWeight" Value="Bold" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading4StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading4FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading4Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading5StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading5FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading5Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.Heading6StyleKey}" TargetType="{x:Type Paragraph}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownHeading6FontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownHeading6Brush}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.HyperlinkStyleKey}" TargetType="{x:Type Hyperlink}">
        <Setter Property="FontSize" Value="{DynamicResource MarkdownLinkFontSize}" />
        <Setter Property="Foreground" Value="{DynamicResource HyperlinkButtonForeground}" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.ImageStyleKey}" TargetType="{x:Type Image}">
        <Setter Property="MaxHeight" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelHeight)}" />
        <Setter Property="MaxWidth" Value="{Binding RelativeSource={RelativeSource Self}, Path=Source.(BitmapSource.PixelWidth)}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.QuoteBlockStyleKey}" TargetType="{x:Type Section}">
        <Setter Property="BorderBrush" Value="{DynamicResource MarkdownQuoteBlockBorderBrush}" />
        <Setter Property="BorderThickness" Value="4,0,0,0" />
        <Setter Property="Foreground" Value="{DynamicResource MarkdownQuoteBlockForeground}" />
        <Setter Property="Padding" Value="16,0,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.TableStyleKey}" TargetType="{x:Type Table}">
        <Setter Property="Foreground" Value="{DynamicResource CardForeground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}" />
        <Setter Property="BorderThickness" Value="0,0,1,1" />
        <Setter Property="CellSpacing" Value="0" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
        <Setter Property="LineHeight" Value="18" />
    </Style>

    <Style x:Key="{x:Static md:Styles.TableCellStyleKey}" TargetType="{x:Type TableCell}">
        <Setter Property="Foreground" Value="{DynamicResource CardForeground}" />
        <Setter Property="Background" Value="{DynamicResource CardBackground}" />
        <Setter Property="BorderBrush" Value="{DynamicResource CardBorderBrush}" />
        <Setter Property="BorderThickness" Value="1,1,0,0" />
        <Setter Property="FontFamily" Value="{DynamicResource MonoThemeFontFamily}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.TableHeaderStyleKey}" TargetType="{x:Type TableRow}">
        <Setter Property="FontWeight" Value="Bold" />
    </Style>

    <Style
        x:Key="{x:Static md:Styles.TaskListStyleKey}"
        BasedOn="{StaticResource DefaultMarkdownCheckBoxStyle}"
        TargetType="{x:Type CheckBox}">
        <Setter Property="Margin" Value="0,4,-4,-4" />
        <Setter Property="Padding" Value="0" />
        <Setter Property="MinHeight" Value="0" />
        <Setter Property="MinWidth" Value="0" />
        <Setter Property="Height" Value="24" />
    </Style>

    <Style x:Key="{x:Static md:Styles.ThematicBreakStyleKey}" TargetType="{x:Type Line}">
        <Setter Property="Stretch" Value="Fill" />
        <Setter Property="Stroke" Value="{DynamicResource MarkdownThematicBreakStroke}" />
    </Style>

    <Style x:Key="{x:Static md:Styles.SubscriptStyleKey}" TargetType="{x:Type Span}">
        <Setter Property="Typography.Variants" Value="Subscript" />
    </Style>

    <Style x:Key="{x:Static md:Styles.SuperscriptStyleKey}" TargetType="{x:Type Span}">
        <Setter Property="Typography.Variants" Value="Superscript" />
    </Style>

    <Style x:Key="{x:Static md:Styles.StrikeThroughStyleKey}" TargetType="{x:Type Span}">
        <Setter Property="TextBlock.TextDecorations" Value="Strikethrough" />
    </Style>

    <Style x:Key="{x:Static md:Styles.InsertedStyleKey}" TargetType="{x:Type Span}">
        <Setter Property="TextBlock.TextDecorations" Value="Underline" />
        <Setter Property="TextDecorations" Value="Underline" />
    </Style>

    <Style x:Key="{x:Static md:Styles.MarkedStyleKey}" TargetType="{x:Type Span}">
        <Setter Property="Background" Value="{DynamicResource MarkdownMarkedBackground}" />
    </Style>

</ResourceDictionary>